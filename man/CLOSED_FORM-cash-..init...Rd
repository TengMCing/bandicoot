% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zzz_CLOSED_FORM.R
\name{CLOSED_FORM$..init..}
\alias{CLOSED_FORM$..init..}
\title{Initialization method}
\arguments{
\item{expr}{Formula. Only the right hand side of the last \code{~} will be kept as
the final expression.}
}
\value{
No return value, called for side effects.
}
\description{
This function will be called after an instance is built. User
input will be stored in the environment. Any simple expressions can be provided,
as long as all the symbols exist in the current environment. Note that this
function tries to evaluate \strong{ALL the atomic symbols} in the expression during
initialization, and store the values in the object. Hence, calls like
\code{a$b} will also be decomposed as \code{$}, \code{a} and \code{b}, where \code{b} will be
interpreted as \strong{a variable "b" exists in the current environment}. Therefore,
use \code{~a[["b"]]} instead of \code{~a$b}. And pre-define function like
\code{myfun = function() 1}, then use it in the expression \code{~myfun()}.
\cr
\cr
Random variables will be replaced with a vector of random values when is
called by the \code{gen} method.
\cr
\cr
Hierarchical closed form expression will also be replaced with a vector of
values when is called by the \code{gen} method.
}
\examples{

# Constant variable
a <- 1

# Random uniform variable
b <- rand_uniform()

# Define a closed form expression
cf <- closed_form(~3 * (exp(a) + b))

cf

d <- rand_normal()

# Define a closed form expression with another closed form expression
cf2 <- closed_form(~cf + 3 * d)

cf2
}
