% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/oop.R
\name{import_bandicoot}
\alias{import_bandicoot}
\title{Load functions from the bandicoot into target environment}
\usage{
import_bandicoot(env = parent.frame(), import_oop = TRUE, import_base = TRUE)
}
\arguments{
\item{env}{Environment. The target environment.}

\item{import_oop}{Boolean. Whether or not to import OOP tools.}

\item{import_base}{Boolean. Whether or not to import BASE class.}
}
\value{
No return value, called for side effects.
}
\description{
This function is critical when other packages want to use the bandicoot OOP
system. Since this OOP system is based on environment, any instance will only
run on the environment they defined. So, function like \link{use_method} which
only exists in the package environment can not be accessed by the instance,
unless the function has been loaded into the current environment by calling
\code{use_method <- bandicoot::use_method}, or \code{require(bandicoot)} or
\code{library(bandicoot)}. This issue can usually be addressed by
using the package name directly inside the method body like
\code{this_method <- function() bandicoot::use_method()}. However, if it is not
possible, then this function helps loads corresponding function into target
environment.
}
\details{
This function will call \link{define_pkg_fn}.
}
